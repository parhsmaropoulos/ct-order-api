[{"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Layout\\Footer.js":"1","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\App.js":"2","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Layout\\NotFound.js":"3","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\actions\\items.js":"4","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\actions\\actions.js":"5","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\reducers\\productReducer.js":"6","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\socket\\index.js":"7","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\index.js":"8","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\actions\\snackbar.js":"9","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\actions\\orders.js":"10","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\utils\\axiosHeaders.js":"11","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\store.js":"12","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\reducers\\userReducer.js":"13","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\reducers\\orderReducer.js":"14","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\actions\\messages.js":"15","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\actions\\user.js":"16","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Logging\\SnackBars\\SuccessSnackbar.js":"17","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Modals\\LogRegModal.js":"18","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Order\\OrderMainPage.js":"19","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\NotUsing\\users\\AllUsersPage.js":"20","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Create\\CreateItemForm.js":"21","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\View\\Products\\SingleItemPage.js":"22","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Users\\MainPage.js":"23","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\View\\Choices\\SingleChoicePage.js":"24","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\AdminMainPage.js":"25","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Create\\CreateCategoryForm.js":"26","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Create\\CreateChoiceForm.js":"27","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Create\\CreateIngredientForm.js":"28","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Create\\CreatePage.js":"29","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Home\\HomePage.js":"30","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Order\\PreCompleteOrderPage.js":"31","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Users\\UserAddress.js":"32","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Modals\\AddressModal.js":"33","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Users\\UserOrders.js":"34","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\View\\Choices\\ChoicesComponent.js":"35","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\View\\Ingredients\\IngredientsComponent.js":"36","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\View\\Ingredients\\SingleIngredientPage.js":"37","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\View\\Products\\ItemsComponent.js":"38","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\View\\ItemsPage.js":"39","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Modals\\OrderItemModal.js":"40","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Modals\\EditAddressModal.js":"41","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Users\\UserRatings.js":"42","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Common\\TextPage.js":"43","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Layout\\Header.js":"44","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Common\\TextData.js":"45","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Logging\\SnackBars\\InfoSnackbar.js":"46","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\reducers\\errors.js":"47","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Create\\CreateForm.js":"48","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Stats\\StatsPage.js":"49","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Create\\CreateOptionsData.js":"50","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\reducers\\uiReducer.js":"51","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Components\\Sidebar.js":"52","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\reportWebVitals.js":"53","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\reducers\\webSocketReducer.js":"54","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Common\\PrivateRoute.js":"55","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Layout\\Marker.js":"56","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\reducers\\index.js":"57","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Logging\\SnackBars\\ErrorSnackbar.js":"58","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Comments\\AllComents.js":"59","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\actions\\comments.js":"60","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Common\\tabs.js":"61","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Components\\RightContainer.js":"62","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Components\\InnerSidebarCatalog.js":"63","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Components\\ProductCatalog.js":"64","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Components\\IngredientsCatalog.js":"65","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Components\\CommentsCatalog.js":"66","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\reducers\\adminReducer.js":"67","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Orders\\OrdersCatalog.js":"68","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Orders\\OrderProductsRow.js":"69","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Orders\\OrderUserDetailsRow.js":"70","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Common\\PrintComponent.js":"71","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\utils\\util.js":"72","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\AdminLogInPage.js":"73","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Common\\AdminRoute.js":"74","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\firebase\\base.js":"75","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\firebase\\AuthProvider.js":"76","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\actions\\lib.js":"77"},{"size":6179,"mtime":1621760918567,"results":"78","hashOfConfig":"79"},{"size":5757,"mtime":1628628258820,"results":"80","hashOfConfig":"79"},{"size":276,"mtime":1619857868180,"results":"81","hashOfConfig":"82"},{"size":14758,"mtime":1628784095231,"results":"83","hashOfConfig":"79"},{"size":4035,"mtime":1628539221146,"results":"84","hashOfConfig":"79"},{"size":3744,"mtime":1628787147541,"results":"85","hashOfConfig":"79"},{"size":837,"mtime":1620205912836,"results":"86","hashOfConfig":"79"},{"size":803,"mtime":1628615591678,"results":"87","hashOfConfig":"82"},{"size":956,"mtime":1620130056947,"results":"88","hashOfConfig":"79"},{"size":5636,"mtime":1628537321395,"results":"89","hashOfConfig":"82"},{"size":294,"mtime":1628785969703,"results":"90","hashOfConfig":"79"},{"size":1307,"mtime":1620545351865,"results":"91","hashOfConfig":"79"},{"size":3260,"mtime":1628541744754,"results":"92","hashOfConfig":"79"},{"size":1869,"mtime":1620843759207,"results":"93","hashOfConfig":"79"},{"size":1214,"mtime":1620129957998,"results":"94","hashOfConfig":"82"},{"size":12727,"mtime":1628708924527,"results":"95","hashOfConfig":"79"},{"size":1645,"mtime":1618597023368,"results":"96","hashOfConfig":"82"},{"size":9737,"mtime":1628676773165,"results":"97","hashOfConfig":"79"},{"size":29295,"mtime":1627675395727,"results":"98","hashOfConfig":"82"},{"size":402,"mtime":1620130760054,"results":"99","hashOfConfig":"82"},{"size":15218,"mtime":1628414658703,"results":"100","hashOfConfig":"79"},{"size":14872,"mtime":1628431050375,"results":"101","hashOfConfig":"79"},{"size":7166,"mtime":1628454327224,"results":"102","hashOfConfig":"79"},{"size":6318,"mtime":1628429771783,"results":"103","hashOfConfig":"82"},{"size":4872,"mtime":1620843512154,"results":"104","hashOfConfig":"79"},{"size":3315,"mtime":1620131546158,"results":"105","hashOfConfig":"82"},{"size":5816,"mtime":1627675395721,"results":"106","hashOfConfig":"79"},{"size":4087,"mtime":1628339236918,"results":"107","hashOfConfig":"82"},{"size":2008,"mtime":1621058344180,"results":"108","hashOfConfig":"82"},{"size":3347,"mtime":1620462341611,"results":"109","hashOfConfig":"82"},{"size":20556,"mtime":1621714808987,"results":"110","hashOfConfig":"79"},{"size":9591,"mtime":1628541697368,"results":"111","hashOfConfig":"79"},{"size":6837,"mtime":1628540333155,"results":"112","hashOfConfig":"82"},{"size":9376,"mtime":1628540207815,"results":"113","hashOfConfig":"82"},{"size":3636,"mtime":1628429629532,"results":"114","hashOfConfig":"82"},{"size":4049,"mtime":1628429320946,"results":"115","hashOfConfig":"82"},{"size":4632,"mtime":1628430146022,"results":"116","hashOfConfig":"79"},{"size":5658,"mtime":1628429602309,"results":"117","hashOfConfig":"79"},{"size":2443,"mtime":1628784861111,"results":"118","hashOfConfig":"79"},{"size":25429,"mtime":1627675395718,"results":"119","hashOfConfig":"79"},{"size":8821,"mtime":1628541119326,"results":"120","hashOfConfig":"82"},{"size":2074,"mtime":1621937475031,"results":"121","hashOfConfig":"79"},{"size":580,"mtime":1620387584070,"results":"122","hashOfConfig":"79"},{"size":6933,"mtime":1628785642759,"results":"123","hashOfConfig":"79"},{"size":102,"mtime":1620387582137,"results":"124","hashOfConfig":"82"},{"size":1627,"mtime":1618597043608,"results":"125","hashOfConfig":"82"},{"size":846,"mtime":1618596459282,"results":"126","hashOfConfig":"82"},{"size":1282,"mtime":1620130596117,"results":"127","hashOfConfig":"82"},{"size":2680,"mtime":1620201783837,"results":"128","hashOfConfig":"82"},{"size":200,"mtime":1620130596846,"results":"129","hashOfConfig":"82"},{"size":1133,"mtime":1618256485899,"results":"130","hashOfConfig":"82"},{"size":2948,"mtime":1621764433755,"results":"131","hashOfConfig":"79"},{"size":362,"mtime":1609944825456,"results":"132","hashOfConfig":"82"},{"size":596,"mtime":1619366536780,"results":"133","hashOfConfig":"79"},{"size":614,"mtime":1628628428516,"results":"134","hashOfConfig":"79"},{"size":651,"mtime":1620130925642,"results":"135","hashOfConfig":"82"},{"size":546,"mtime":1620588243144,"results":"136","hashOfConfig":"82"},{"size":1456,"mtime":1618597051768,"results":"137","hashOfConfig":"82"},{"size":3719,"mtime":1621085057851,"results":"138","hashOfConfig":"82"},{"size":2553,"mtime":1627675395706,"results":"139","hashOfConfig":"82"},{"size":321,"mtime":1621073880729,"results":"140","hashOfConfig":"82"},{"size":3900,"mtime":1621073960194,"results":"141","hashOfConfig":"82"},{"size":2457,"mtime":1621764484696,"results":"142","hashOfConfig":"79"},{"size":2162,"mtime":1620593334902,"results":"143","hashOfConfig":"82"},{"size":2260,"mtime":1620593233938,"results":"144","hashOfConfig":"79"},{"size":5459,"mtime":1621086833593,"results":"145","hashOfConfig":"79"},{"size":4800,"mtime":1621763805135,"results":"146","hashOfConfig":"82"},{"size":4585,"mtime":1620842190277,"results":"147","hashOfConfig":"82"},{"size":3487,"mtime":1621087105386,"results":"148","hashOfConfig":"79"},{"size":6061,"mtime":1621086988310,"results":"149","hashOfConfig":"79"},{"size":7390,"mtime":1621087171251,"results":"150","hashOfConfig":"82"},{"size":282,"mtime":1627675395751,"results":"151","hashOfConfig":"82"},{"size":2983,"mtime":1621763947605,"results":"152","hashOfConfig":"82"},{"size":535,"mtime":1621764670340,"results":"153","hashOfConfig":"82"},{"size":589,"mtime":1628627049829,"results":"154","hashOfConfig":"79"},{"size":483,"mtime":1628708434806,"results":"155","hashOfConfig":"79"},{"size":1111,"mtime":1628787076536,"results":"156","hashOfConfig":"79"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rlr1vo",{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},"1hn2an1",{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"163"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"163"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"237"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"237"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"237"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Layout\\Footer.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\App.js",["316"],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Layout\\NotFound.js",[],["317","318"],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\actions\\items.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\actions\\actions.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\reducers\\productReducer.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\socket\\index.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\index.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\actions\\snackbar.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\actions\\orders.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\utils\\axiosHeaders.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\store.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\reducers\\userReducer.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\reducers\\orderReducer.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\actions\\messages.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\actions\\user.js",["319"],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Logging\\SnackBars\\SuccessSnackbar.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Modals\\LogRegModal.js",["320","321","322"],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Order\\OrderMainPage.js",["323"],"import React, { Component } from \"react\";\r\nimport { Card, Col, ListGroup, Row, ThemeProvider } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../../css/Pages/orderpage.css\";\r\nimport OrderItemModal from \"../../Modals/OrderItemModal\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect } from \"react-router\";\r\nimport { update_cart } from \"../../../actions/orders\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport {\r\n  GetAsyncCategories,\r\n  GetAsyncItems,\r\n  get_items,\r\n  get_categories,\r\n  get_ingredients,\r\n  get_choices,\r\n} from \"../../../actions/items\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { showInfoSnackbar } from \"../../../actions/snackbar\";\r\n// import AlertModal from \"../../MainPanel/Pages/Alert/AlertModal\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Container,\r\n  createMuiTheme,\r\n  Drawer,\r\n  Grid,\r\n  Hidden,\r\n  IconButton,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { orange } from \"@material-ui/core/colors\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nvar _ = require(\"lodash\");\r\n\r\nconst customTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: orange[500],\r\n    },\r\n  },\r\n});\r\n\r\nclass OrderMainPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addToCart = this.addToCart.bind(this);\r\n    this.removeFromCart = this.removeFromCart.bind(this);\r\n    this.clearCart = this.clearCart.bind(this);\r\n    this.changeCategory = this.changeCategory.bind(this);\r\n    this.showModal = this.showModal.bind(this);\r\n    this.showAlert = this.showAlert.bind(this);\r\n    this.toggleDrawer = this.toggleDrawer.bind(this);\r\n  }\r\n  state = {\r\n    cart: [],\r\n    totalPrice: 0,\r\n    grouped: [],\r\n    selectedCategory: \"1\",\r\n    selectedItem: {},\r\n    itemToUpdate: {},\r\n    showModal: false,\r\n    modalToUpdate: false,\r\n    indexToUpdate: 0,\r\n    pathToImages: \"\",\r\n    showAlert: false,\r\n    alertMessage: \"\",\r\n    continueOrder: false,\r\n    products: [],\r\n    categories: [],\r\n    isReady: false,\r\n    openDrawer: false,\r\n  };\r\n  static propTypes = {\r\n    orderReducer: PropTypes.object.isRequired,\r\n    userReducer: PropTypes.object.isRequired,\r\n    products: PropTypes.array.isRequired,\r\n    categories: PropTypes.array.isRequired,\r\n    isReady: PropTypes.bool.isRequired,\r\n    update_cart: PropTypes.func.isRequired,\r\n    showInfoSnackbar: PropTypes.func.isRequired,\r\n    GetAsyncCategories: PropTypes.func.isRequired,\r\n    GetAsyncItems: PropTypes.func.isRequired,\r\n    get_items: PropTypes.func.isRequired,\r\n    get_categories: PropTypes.func.isRequired,\r\n    get_ingredients: PropTypes.func.isRequired,\r\n    get_choices: PropTypes.func.isRequired,\r\n  };\r\n  changeCategory = (category, drawer) => {\r\n    this.setState({ selectedCategory: category });\r\n    if (drawer) {\r\n      this.setState({ openDrawer: false });\r\n    }\r\n  };\r\n\r\n  continueOrder = () => {\r\n    if (this.state.cart.length > 0) {\r\n      if (sessionStorage.getItem(\"isAuthenticated\") !== \"true\") {\r\n        // this.showAlert(true, \"You have to login first!\");\r\n        this.props.showInfoSnackbar(\"You have to login first!\");\r\n      } else {\r\n        this.setState({\r\n          continueOrder: true,\r\n        });\r\n      }\r\n    } else {\r\n      // return <Alert variant=\"secondary\">Your card is empty!</Alert>;\r\n      this.props.showInfoSnackbar(\"Your cart is empty!\");\r\n    }\r\n  };\r\n\r\n  updateCart = (item, quantity, index) => {\r\n    // console.log(item, quantity);\r\n    const order_item = {\r\n      item: item.item,\r\n      options: item.options,\r\n      comment: item.comment,\r\n      totalPrice: item.item.price * quantity + item.extraPrice * quantity,\r\n      optionAnswers: item.optionAnswers,\r\n      extra_ingredients: item.extra_ingredients,\r\n      quantity: quantity,\r\n    };\r\n    let cart_ = this.state.cart;\r\n    let oldTotalPrice = this.state.totalPrice;\r\n    let newTotalPrice =\r\n      oldTotalPrice - cart_[index].totalPrice + order_item.totalPrice;\r\n    cart_[index] = order_item;\r\n    this.setState({\r\n      cart: cart_,\r\n      totalPrice: newTotalPrice,\r\n    });\r\n    // this.props.update_order(this.state.cart, this.state.totalPrice);\r\n  };\r\n\r\n  addToCart = (item, quantity) => {\r\n    const order_item = {\r\n      item: item.item,\r\n      options: item.options,\r\n      comment: item.comment,\r\n      extraPrice: item.extraPrice,\r\n      totalPrice: item.item.price * quantity + item.extraPrice * quantity,\r\n      optionAnswers: item.optionAnswers,\r\n      extra_ingredients: item.extra_ingredients,\r\n      quantity: quantity,\r\n    };\r\n    this.setState({\r\n      cart: [...this.state.cart, order_item],\r\n      totalPrice: this.state.totalPrice + order_item.totalPrice,\r\n    });\r\n    // this.props.update_order(this.state.cart, this.state.totalPrice);\r\n  };\r\n\r\n  removeFromCart = (index, order_item) => {\r\n    console.log(order_item);\r\n    this.setState({\r\n      cart: [...this.state.cart.filter((item, idex) => idex !== index)],\r\n      totalPrice: this.state.totalPrice - order_item.totalPrice,\r\n    });\r\n    // this.props.update_order(this.state.cart, this.state.totalPrice);\r\n  };\r\n\r\n  clearCart() {\r\n    this.setState({ cart: [], totalPrice: 0 });\r\n    // this.props.update_order(this.state.cart, this.state.totalPrice);\r\n  }\r\n\r\n  showModal = (item, bool, close, index) => {\r\n    let item_ = {};\r\n    let cat_ = \"\";\r\n    if (bool) {\r\n      item_ = item.item;\r\n    } else {\r\n      item_ = item;\r\n    }\r\n    if (close) {\r\n      cat_ = this.state.selectedCategory;\r\n    } else {\r\n      cat_ = item_.category;\r\n    }\r\n    this.setState({\r\n      selectedItem: item_,\r\n      selectedCategory: cat_,\r\n      showModal: !this.state.showModal,\r\n      modalToUpdate: bool,\r\n      indexToUpdate: index,\r\n      itemToUpdate: item,\r\n    });\r\n  };\r\n\r\n  toggleDrawer = (bool) => {\r\n    this.setState({ openDrawer: bool });\r\n  };\r\n\r\n  changeQuantity = (bool, index) => {\r\n    let cur_cart = [...this.state.cart];\r\n    let cur_item = cur_cart[index];\r\n    let price_per_unit = cur_item.totalPrice / cur_item.quantity;\r\n    let cartTotalPrice = this.state.totalPrice;\r\n\r\n    if (bool) {\r\n      cur_item.totalPrice += price_per_unit;\r\n      cur_item.quantity += 1;\r\n      cartTotalPrice += price_per_unit;\r\n    } else {\r\n      cur_item.totalPrice -= price_per_unit;\r\n      cur_item.quantity -= 1;\r\n      cartTotalPrice -= price_per_unit;\r\n    }\r\n    cur_cart[index] = cur_item;\r\n    console.log(cur_item);\r\n    if (cur_item.quantity === 0) {\r\n      cur_item.quantity += 1;\r\n      cur_item.totalPrice += price_per_unit;\r\n      this.removeFromCart(index, cur_item);\r\n    } else {\r\n      this.setState({\r\n        cart: cur_cart,\r\n        totalPrice: cartTotalPrice,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.update_cart(this.state.cart, this.state.totalPrice);\r\n  }\r\n  showAlert = (bool, msg) => {\r\n    this.setState({\r\n      showAlert: bool,\r\n      alertMessage: msg,\r\n    });\r\n  };\r\n\r\n  showSearchResults = (e) => {\r\n    let type = e.type;\r\n    // console.log(e.target.value);\r\n    // console.log(e.target.textContent);\r\n    if (type === \"click\" || type === \"keydown\") {\r\n      let name = e.target.textContent;\r\n      if (type === \"keydown\") {\r\n        name = e.target.value;\r\n      }\r\n      let product;\r\n      let found = false;\r\n      for (var i in this.props.products) {\r\n        if (this.props.products[i].name === name) {\r\n          product = this.props.products[i];\r\n          found = true;\r\n          break;\r\n        }\r\n      }\r\n      if (found)\r\n        this.setState(\r\n          {\r\n            selectedCategory: product.category,\r\n          },\r\n          () => {\r\n            // console.log(this.state.selectedCategory);\r\n          }\r\n        );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!this.props.isReady) {\r\n      this.props.get_items();\r\n      this.props.get_categories();\r\n      this.props.get_ingredients();\r\n      this.props.get_choices();\r\n    }\r\n    if (this.props.orderReducer.products.length > 0) {\r\n      let grouped = _.groupBy(this.props.products, \"category\");\r\n      let category = this.props.categories[0].name;\r\n      if (this.state.searchParam !== \"\") {\r\n        for (var i in this.props.products) {\r\n          if (this.props.products[i].name === this.state.searchParam) {\r\n            category = this.props.products[i].categroy;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      this.setState({\r\n        selectedCategory: category,\r\n        grouped: grouped,\r\n        cart: this.props.orderReducer.products,\r\n        totalPrice: this.props.orderReducer.totalPrice,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let modal;\r\n    let alertModal;\r\n    if (this.state.showModal) {\r\n      modal = (\r\n        <OrderItemModal\r\n          onClose={() =>\r\n            this.showModal(this.state.selectedItem, false, true, 0)\r\n          }\r\n          show={this.state.showModal}\r\n          item={this.state.selectedItem}\r\n          update={this.state.modalToUpdate}\r\n          updateItem={this.state.itemToUpdate}\r\n          category={\r\n            this.props.categories.filter(\r\n              (cat) => cat.name === this.state.selectedCategory\r\n            )[0]\r\n          }\r\n          onAdd={this.addToCart}\r\n          onUpdate={this.updateCart}\r\n          index={this.state.indexToUpdate}\r\n        />\r\n      );\r\n    }\r\n    if (this.state.continueOrder) {\r\n      return (\r\n        <Redirect to={`/pre_complete/${sessionStorage.getItem(\"userID\")}`} />\r\n      );\r\n    }\r\n    if (!this.props.isReady) {\r\n      return (\r\n        <div className=\"loading-div\">\r\n          <CircularProgress disableShrink />{\" \"}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        // <div id=\"orderMainPageContainer\">\r\n        <Container>\r\n          <ThemeProvider theme={customTheme}>\r\n            <Grid spacing={1} container style={{ minHeight: \"70vh\" }}>\r\n              {alertModal}\r\n              {/* <Row className=\"orderMainPageRow\"> */}\r\n              {/* ############## CATEGORIES ################## */}\r\n              <Hidden smUp>\r\n                <Grid item sm={2} xs={2} spacing={2}>\r\n                  <Button\r\n                    style={{\r\n                      justifyContent: \"left\",\r\n                    }}\r\n                    className=\"menu-categories-list-button\"\r\n                    onClick={() => this.toggleDrawer(true)}\r\n                  >\r\n                    <MenuIcon />\r\n                  </Button>\r\n                  <Drawer\r\n                    anchor={\"left\"}\r\n                    open={this.state.openDrawer}\r\n                    onClose={() => this.toggleDrawer(false)}\r\n                  >\r\n                    {this.props.categories.map((categ, index) => {\r\n                      let selected = false;\r\n                      if (this.state.selectedCategory === categ.id) {\r\n                        selected = true;\r\n                      }\r\n                      return (\r\n                        <ListGroup.Item\r\n                          key={index}\r\n                          onClick={() => this.changeCategory(categ.id, true)}\r\n                          active={selected}\r\n                        >\r\n                          {categ.base_category.name}\r\n                        </ListGroup.Item>\r\n                      );\r\n                    })}\r\n                  </Drawer>\r\n                </Grid>\r\n              </Hidden>\r\n              <Hidden mdDown>\r\n                <Grid item lg={3} className=\"categoriesListCol\">\r\n                  <div className=\"categoriesList\">\r\n                    <ListGroup className=\"categoriesListGroup\">\r\n                      {this.props.categories.map((categ, index) => {\r\n                        let selected = false;\r\n                        if (this.state.selectedCategory === categ.id) {\r\n                          selected = true;\r\n                        }\r\n                        return (\r\n                          <ListGroup.Item\r\n                            key={index}\r\n                            onClick={() => this.changeCategory(categ.id, false)}\r\n                            active={selected}\r\n                          >\r\n                            {categ.base_category.name}\r\n                          </ListGroup.Item>\r\n                        );\r\n                      })}\r\n                    </ListGroup>\r\n                  </div>\r\n                </Grid>\r\n              </Hidden>\r\n              {/* ################### PRODUCTS ############### */}\r\n              <Grid\r\n                item\r\n                lg={6}\r\n                md={12}\r\n                sm={10}\r\n                xs={10}\r\n                style={{ width: \"100%\" }}\r\n                className=\"productList\"\r\n              >\r\n                {/* <SearchBar /> */}\r\n                <Autocomplete\r\n                  id=\"search-product\"\r\n                  options={this.props.products}\r\n                  getOptionLabel={(option) => option.base_product.name}\r\n                  // disableClearables={false}\r\n                  autoComplete\r\n                  onClose={(e) => this.showSearchResults(e)}\r\n                  renderOption={(option, index) => (\r\n                    <Typography\r\n                      noWrap\r\n                      // onClick={(e) => console.log(e)}\r\n                      key={index}\r\n                    >\r\n                      {option.base_product.name}\r\n                    </Typography>\r\n                  )}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Search product\"\r\n                      variant=\"outlined\"\r\n                      InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                    />\r\n                  )}\r\n                />\r\n                <ListGroup variant=\"flush\">\r\n                  {this.props.products.map((item, index) => {\r\n                    if (\r\n                      item.base_product.category_id ===\r\n                      this.state.selectedCategory\r\n                    ) {\r\n                      if (item.base_product.available === false) {\r\n                        return (\r\n                          <ListGroup.Item\r\n                            key={index}\r\n                            disabled\r\n                            id={item.base_product.name}\r\n                          >\r\n                            <Card border=\"light\">\r\n                              <Row className=\"itemCardRow\">\r\n                                {item.base_product.image === \"\" ? (\r\n                                  <Col\r\n                                    sm={4}\r\n                                    className=\"itemCardImageCol\"\r\n                                  ></Col>\r\n                                ) : (\r\n                                  <Col sm={4} className=\"itemCardImageCol\">\r\n                                    <Card.Img\r\n                                      // src={`http:://localhost:8080/assets/images/${item.image}`}\r\n                                      src={`http://localhost:8080/assets/images/${item.base_product.image}`}\r\n                                      className=\"itemCardImage\"\r\n                                    ></Card.Img>{\" \"}\r\n                                  </Col>\r\n                                )}\r\n                                <Col sm={8}>\r\n                                  <Card.Body>\r\n                                    <Card.Title className=\"item-unavailable\">\r\n                                      {item.base_product.name}\r\n                                    </Card.Title>\r\n                                    <Card.Subtitle className=\"text-muted\">\r\n                                      {/* {item.description} */}\r\n                                      {item.base_product.default_ingredientes &&\r\n                                      item.base_product.default_ingredientes\r\n                                        .length > 0\r\n                                        ? item.base_product.default_ingredientes.join()\r\n                                        : item.base_product.description}\r\n                                    </Card.Subtitle>\r\n                                    <Card.Text>\r\n                                      {item.base_product.price} €\r\n                                    </Card.Text>\r\n                                  </Card.Body>\r\n                                </Col>\r\n                              </Row>\r\n                            </Card>\r\n                          </ListGroup.Item>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <ListGroup.Item\r\n                            key={index}\r\n                            onClick={() =>\r\n                              this.showModal(item.base_product, false, false, 0)\r\n                            }\r\n                            id={item.base_product.name}\r\n                          >\r\n                            <Card border=\"light\">\r\n                              <Row className=\"itemCardRow\">\r\n                                <Hidden mdDown>\r\n                                  {item.base_product.image === \"\" ? (\r\n                                    <Col\r\n                                      sm={4}\r\n                                      className=\"itemCardImageCol\"\r\n                                    ></Col>\r\n                                  ) : (\r\n                                    <Col sm={4} className=\"itemCardImageCol\">\r\n                                      <Card.Img\r\n                                        src={`http://localhost:8080/assets/images/${item.base_product.image}`}\r\n                                        className=\"itemCardImage\"\r\n                                      ></Card.Img>{\" \"}\r\n                                    </Col>\r\n                                  )}\r\n                                </Hidden>\r\n                                <Col sm={8}>\r\n                                  <Card.Body>\r\n                                    <Card.Title>\r\n                                      {item.base_product.name}\r\n                                    </Card.Title>\r\n                                    <Card.Subtitle className=\"text-muted\">\r\n                                      {item.base_product.default_ingredients &&\r\n                                      item.base_product.default_ingredients\r\n                                        .length > 0\r\n                                        ? item.base_product.default_ingredients.join()\r\n                                        : item.base_product.description}\r\n                                    </Card.Subtitle>\r\n                                    <Card.Text>\r\n                                      {item.base_product.price} €\r\n                                    </Card.Text>\r\n                                  </Card.Body>\r\n                                </Col>\r\n                              </Row>\r\n                            </Card>\r\n                          </ListGroup.Item>\r\n                        );\r\n                      }\r\n                    } else {\r\n                      return <span key={index}></span>;\r\n                    }\r\n                  })}\r\n                </ListGroup>\r\n              </Grid>\r\n              {modal}\r\n              {/* ################### CART ############### */}\r\n              <Grid\r\n                item\r\n                lg={3}\r\n                md={12}\r\n                sm={12}\r\n                xs={12}\r\n                style={{ width: \"100%\" }}\r\n                className=\"cart\"\r\n              >\r\n                <div className=\"stickyCard\">\r\n                  <Card>\r\n                    <Card.Body className=\"cardBody\">\r\n                      <Card.Title>Το καλάθι σου</Card.Title>\r\n                      <div className=\"cartList\">\r\n                        {this.state.cart.length > 0 ? (\r\n                          <ListGroup>\r\n                            {this.state.cart.map((order_item, index) => {\r\n                              // console.log(order_item);\r\n                              return (\r\n                                <ListGroup.Item\r\n                                  key={index}\r\n                                  className=\"cardItem\"\r\n                                >\r\n                                  <Card border=\"light\">\r\n                                    <Card.Header\r\n                                      style={{ backgroundColor: \"white\" }}\r\n                                    >\r\n                                      <Row className=\"headerItem\">\r\n                                        <div\r\n                                          onClick={() =>\r\n                                            this.showModal(\r\n                                              order_item,\r\n                                              true,\r\n                                              false,\r\n                                              index\r\n                                            )\r\n                                          }\r\n                                          className=\"cartItemName\"\r\n                                        >\r\n                                          {order_item.item.name}\r\n                                        </div>\r\n                                        <div className=\"cartItemPrice\">\r\n                                          {order_item.totalPrice /\r\n                                            order_item.quantity}{\" \"}\r\n                                          €\r\n                                        </div>\r\n                                      </Row>\r\n                                    </Card.Header>\r\n                                    <Card.Body>\r\n                                      <Row className=\"bodyItem\">\r\n                                        {order_item.optionAnswers.length > 0 ? (\r\n                                          <div className=\"cartItemOptions\">\r\n                                            <p>\r\n                                              {order_item.optionAnswers.join() +\r\n                                                `,${order_item.comment}`}\r\n                                            </p>\r\n                                          </div>\r\n                                        ) : (\r\n                                          <div className=\"cartItemOptions\">\r\n                                            {order_item.comment}\r\n                                          </div>\r\n                                        )}\r\n                                        <ul className=\"ingredientCartList\">\r\n                                          {order_item.extra_ingredients.length >\r\n                                          0 ? (\r\n                                            order_item.extra_ingredients.map(\r\n                                              (ingredient, index) => {\r\n                                                return (\r\n                                                  <li\r\n                                                    key={index}\r\n                                                    style={{\r\n                                                      textAlign: \"left\",\r\n                                                    }}\r\n                                                  >\r\n                                                    + {ingredient}\r\n                                                  </li>\r\n                                                );\r\n                                              }\r\n                                            )\r\n                                          ) : (\r\n                                            <span></span>\r\n                                          )}\r\n                                        </ul>\r\n                                      </Row>\r\n                                    </Card.Body>\r\n                                    <Card.Footer\r\n                                      style={{ backgroundColor: \"white\" }}\r\n                                    >\r\n                                      <Grid direction=\"row\" container>\r\n                                        <Grid item xs={9}>\r\n                                          <IconButton\r\n                                            className=\"minPlusButton\"\r\n                                            color=\"primary\"\r\n                                            variant=\"contained\"\r\n                                            aria-label=\"remove\"\r\n                                            onClick={() =>\r\n                                              this.changeQuantity(false, index)\r\n                                            }\r\n                                          >\r\n                                            <RemoveIcon fontSize=\"small\" />\r\n                                          </IconButton>\r\n                                          <span>{order_item.quantity}</span>\r\n                                          <IconButton\r\n                                            className=\"minPlusButton\"\r\n                                            color=\"primary\"\r\n                                            variant=\"contained\"\r\n                                            aria-label=\"add\"\r\n                                            onClick={() =>\r\n                                              this.changeQuantity(true, index)\r\n                                            }\r\n                                          >\r\n                                            <AddIcon fontSize=\"small\" />\r\n                                          </IconButton>\r\n                                        </Grid>\r\n                                        <Grid item xs={3}>\r\n                                          {/* <div className=\"removeButtonCol\"> */}\r\n                                          <IconButton\r\n                                            className=\"removeButton minPlusButton\"\r\n                                            color=\"secondary\"\r\n                                            variant=\"contained\"\r\n                                            aria-label=\"remove\"\r\n                                            onClick={() =>\r\n                                              this.removeFromCart(\r\n                                                index,\r\n                                                order_item\r\n                                              )\r\n                                            }\r\n                                          >\r\n                                            <ClearIcon fontSize=\"small\" />\r\n                                          </IconButton>\r\n                                          {/* </div> */}\r\n                                        </Grid>\r\n                                      </Grid>\r\n                                    </Card.Footer>\r\n                                  </Card>\r\n                                </ListGroup.Item>\r\n                              );\r\n                            })}\r\n                          </ListGroup>\r\n                        ) : (\r\n                          <Card.Text>Το καλάθι είναι άδειο</Card.Text>\r\n                        )}\r\n                      </div>\r\n                      <hr />\r\n                      <Row>\r\n                        <Col>\r\n                          <Card.Text>Σύνολο</Card.Text>\r\n                        </Col>\r\n                        <Col>\r\n                          <Card.Text> {this.state.totalPrice} €</Card.Text>\r\n                        </Col>\r\n                      </Row>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\"cartButton\"\r\n                        onClick={this.continueOrder}\r\n                      >\r\n                        Συνέχεια\r\n                        {/* <Link to=\"/order/pre_complete\">Συνέχεια</Link> */}\r\n                      </Button>\r\n                      <br />\r\n                      <Card.Text\r\n                        style={{\r\n                          textDecoration: \"underline\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        onClick={this.clearCart}\r\n                      >\r\n                        Άδειασμα\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </div>\r\n              </Grid>\r\n              {/* </Row> */}\r\n              {/* </div> */}\r\n            </Grid>\r\n          </ThemeProvider>\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  console.log(state),\r\n  {\r\n    orderReducer: state.orderReducer,\r\n    products: state.productReducer.products,\r\n    categories: state.productReducer.categories,\r\n    userReducer: state.userReducer,\r\n    isReady: state.productReducer.isReady,\r\n  }\r\n);\r\n\r\nexport default connect(mapStateToProps, {\r\n  update_cart,\r\n  showInfoSnackbar,\r\n  GetAsyncItems,\r\n  GetAsyncCategories,\r\n  get_items,\r\n  get_ingredients,\r\n  get_categories,\r\n  get_choices,\r\n})(OrderMainPage);\r\n","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\NotUsing\\users\\AllUsersPage.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Create\\CreateItemForm.js",["324"],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\View\\Products\\SingleItemPage.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Users\\MainPage.js",["325"],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\View\\Choices\\SingleChoicePage.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\AdminMainPage.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Create\\CreateCategoryForm.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Create\\CreateChoiceForm.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Create\\CreateIngredientForm.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Create\\CreatePage.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Home\\HomePage.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Order\\PreCompleteOrderPage.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Users\\UserAddress.js",["326"],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Modals\\AddressModal.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Users\\UserOrders.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\View\\Choices\\ChoicesComponent.js",["327"],"import React, { Component } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport \"../../../../css/Pages/ItemsPage.css\";\r\n// import { Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { update_choice } from \"../../../../actions/items\";\r\nimport { PencilFill } from \"react-bootstrap-icons\";\r\n\r\nclass ChoicesComponent extends Component {\r\n  state = {\r\n    selectedChoice: 0,\r\n  };\r\n  changeCategory = (categoryIndex) => {\r\n    console.log(categoryIndex);\r\n    this.setState({ selectedChoice: categoryIndex });\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.choices);\r\n    if (this.props.choices.length > 0) {\r\n      this.setState({\r\n        selectedChoice: 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  static propTypes = {\r\n    update_choice: PropTypes.func.isRequired,\r\n    choices: PropTypes.array.isRequired,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ItemsComponent\">\r\n        <div className=\"Categoriestable\">\r\n          <ul className=\"Categorylist\">\r\n            {this.props.choices.length > 0\r\n              ? this.props.choices.map((choice, key) => {\r\n                  return (\r\n                    <li\r\n                      key={key}\r\n                      className=\"row\"\r\n                      onClick={() => this.changeCategory(key)}\r\n                    >\r\n                      {\" \"}\r\n                      <div id=\"button\" name=\"selectedCategory\">\r\n                        {choice.name}\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })\r\n              : null}\r\n          </ul>\r\n        </div>\r\n        <Table bordered striped className=\"Itemstable\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Options</th>\r\n              <th>Description</th>\r\n              <th>Required</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.choices.length > 0 ? (\r\n              <tr>\r\n                <td>{this.props.choices[this.state.selectedChoice].name}</td>\r\n                <td>\r\n                  <ul>\r\n                    {this.props.choices[this.state.selectedChoice].options.map(\r\n                      (option, index) => {\r\n                        return (\r\n                          <li key={index}>\r\n                            {option.name} - {option.price}\r\n                          </li>\r\n                        );\r\n                      }\r\n                    )}\r\n                  </ul>\r\n                </td>\r\n                <td>\r\n                  {this.props.choices[this.state.selectedChoice].description}\r\n                </td>\r\n                <td>\r\n                  {this.props.choices[this.state.selectedChoice].required}\r\n                </td>\r\n                <td>\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"/single_choice\",\r\n                      state: {\r\n                        choice: this.props.choices[this.state.selectedChoice],\r\n                      },\r\n                    }}\r\n                  >\r\n                    <PencilFill />\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            ) : null}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  console.log(state),\r\n  {\r\n    isAuthenticated: state.userReducer.isAuthenticated,\r\n    choices: state.productReducer.choices,\r\n  }\r\n);\r\n\r\nexport default connect(mapStateToProps, {\r\n  update_choice,\r\n})(ChoicesComponent);\r\n","D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\View\\Ingredients\\IngredientsComponent.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\View\\Ingredients\\SingleIngredientPage.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\View\\Products\\ItemsComponent.js",["328","329"],"import React, { Component } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport \"../../../../css/Pages/ItemsPage.css\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { send_order } from \"../../../../actions/orders\";\r\nimport {\r\n  update_item,\r\n  change_item_availability,\r\n  update_ingredient,\r\n} from \"../../../../actions/items\";\r\nimport { PencilFill } from \"react-bootstrap-icons\";\r\n\r\nclass ItemsComponent extends Component {\r\n  state = {\r\n    selectedCategory: 0,\r\n    product_ids: [],\r\n    user_id: null,\r\n  };\r\n  changeCategory = (categoryID) => {\r\n    this.setState({ selectedCategory: categoryID });\r\n  };\r\n\r\n  static propTypes = {\r\n    send_order: PropTypes.func.isRequired,\r\n    update_item: PropTypes.func.isRequired,\r\n    change_item_availability: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ user_id: this.props.user_Id });\r\n  }\r\n\r\n  changeAvailability(item) {\r\n    console.log(\"here\");\r\n    this.props.change_item_availability(item.ID);\r\n  }\r\n  changeAvailabilityIngredient(item) {\r\n    this.props.update_ingredient(item.ID, item, \"change_availability\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ItemsComponent\">\r\n        <div className=\"Categoriestable\">\r\n          <ul className=\"Categorylist\">\r\n            {this.props.categories.map((category, key) => {\r\n              return (\r\n                <li\r\n                  key={key}\r\n                  className=\"row\"\r\n                  onClick={() => this.changeCategory(category.ID)}\r\n                >\r\n                  {\" \"}\r\n                  <div id=\"button\" name=\"selectedCategory\">\r\n                    {category.name}\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n        <Table bordered striped className=\"Itemstable\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Price</th>\r\n              <th>Description</th>\r\n              <th>Available</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.selectedCategory === \"ingredients\"\r\n              ? this.props.ingredients.map((ingredient, index) => {\r\n                  // console.log(ingredient);\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{ingredient.name}</td>\r\n                      <td>{ingredient.price}</td>\r\n                      <td>{ingredient.description}</td>\r\n                      {/* <td>{ingredient.category}</td> */}\r\n                      <td>\r\n                        <Form.Check\r\n                          type=\"switch\"\r\n                          defaultChecked={ingredient.available}\r\n                          onChange={() =>\r\n                            this.changeAvailabilityIngredient(ingredient)\r\n                          }\r\n                          id={ingredient.ID}\r\n                          label=\"Available\"\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/single_ingredient\",\r\n                            state: {\r\n                              ingredient: ingredient,\r\n                            },\r\n                          }}\r\n                        >\r\n                          <PencilFill />\r\n                        </Link>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : this.props.products.map((item, index) => {\r\n                  if (item.category_id === this.state.selectedCategory) {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.price}</td>\r\n                        <td>{item.description}</td>\r\n                        <td>\r\n                          <Form.Check\r\n                            type=\"switch\"\r\n                            defaultChecked={item.available}\r\n                            onChange={() => this.changeAvailability(item)}\r\n                            id={item.ID}\r\n                            label=\"Available\"\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <Link\r\n                            to={{\r\n                              pathname: \"/single_item\",\r\n                              state: {\r\n                                item: item,\r\n                              },\r\n                            }}\r\n                          >\r\n                            <PencilFill />\r\n                          </Link>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  } else {\r\n                    return <tr key={index}></tr>;\r\n                  }\r\n                })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  console.log(state.productReducer.categories),\r\n  {\r\n    isAuthenticated: state.userReducer.isAuthenticated,\r\n    // user_id: state.userReducer.user.id,\r\n    categories: state.productReducer.categories,\r\n    products: state.productReducer.products,\r\n    ingredients: state.productReducer.ingredients,\r\n    order_accepted: state.orderReducer.accepted,\r\n    order_sent: state.orderReducer.sent,\r\n  }\r\n);\r\n\r\nexport default connect(mapStateToProps, {\r\n  update_item,\r\n  update_ingredient,\r\n  change_item_availability,\r\n})(ItemsComponent);\r\n",["330","331"],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\View\\ItemsPage.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Modals\\OrderItemModal.js",["332"],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Modals\\EditAddressModal.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Users\\UserRatings.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Common\\TextPage.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Layout\\Header.js",["333","334"],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Common\\TextData.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Logging\\SnackBars\\InfoSnackbar.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\reducers\\errors.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Create\\CreateForm.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Stats\\StatsPage.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Create\\CreateOptionsData.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\reducers\\uiReducer.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Components\\Sidebar.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\reportWebVitals.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\reducers\\webSocketReducer.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Common\\PrivateRoute.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Layout\\Marker.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\reducers\\index.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Logging\\SnackBars\\ErrorSnackbar.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Comments\\AllComents.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\actions\\comments.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Common\\tabs.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Components\\RightContainer.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Components\\InnerSidebarCatalog.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Components\\ProductCatalog.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Components\\IngredientsCatalog.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Components\\CommentsCatalog.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\reducers\\adminReducer.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Orders\\OrdersCatalog.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Orders\\OrderProductsRow.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Orders\\OrderUserDetailsRow.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\Common\\PrintComponent.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\utils\\util.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Admin\\AdminLogInPage.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\components\\Sections\\Common\\AdminRoute.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\firebase\\base.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\firebase\\AuthProvider.js",[],"D:\\Go-Projects\\src\\GoProjects\\CoffeeTwist\\admin-panel\\src\\actions\\lib.js",[],{"ruleId":"335","severity":1,"message":"336","line":8,"column":8,"nodeType":"337","messageId":"338","endLine":8,"endColumn":18},{"ruleId":"339","replacedBy":"340"},{"ruleId":"341","replacedBy":"342"},{"ruleId":"335","severity":1,"message":"343","line":14,"column":10,"nodeType":"337","messageId":"338","endLine":14,"endColumn":21},{"ruleId":"335","severity":1,"message":"344","line":22,"column":10,"nodeType":"337","messageId":"338","endLine":22,"endColumn":18},{"ruleId":"335","severity":1,"message":"345","line":23,"column":10,"nodeType":"337","messageId":"338","endLine":23,"endColumn":20},{"ruleId":"335","severity":1,"message":"346","line":24,"column":10,"nodeType":"337","messageId":"338","endLine":24,"endColumn":21},{"ruleId":"347","severity":1,"message":"348","line":725,"column":21,"nodeType":"349","messageId":"350","endLine":725,"endColumn":22},{"ruleId":"347","severity":1,"message":"348","line":452,"column":21,"nodeType":"349","messageId":"350","endLine":452,"endColumn":22},{"ruleId":"347","severity":1,"message":"348","line":206,"column":21,"nodeType":"349","messageId":"350","endLine":206,"endColumn":22},{"ruleId":"347","severity":1,"message":"348","line":280,"column":33,"nodeType":"349","messageId":"350","endLine":280,"endColumn":34},{"ruleId":"347","severity":1,"message":"348","line":112,"column":21,"nodeType":"349","messageId":"350","endLine":112,"endColumn":22},{"ruleId":"335","severity":1,"message":"351","line":8,"column":10,"nodeType":"337","messageId":"338","endLine":8,"endColumn":20},{"ruleId":"347","severity":1,"message":"348","line":153,"column":47,"nodeType":"349","messageId":"350","endLine":153,"endColumn":48},{"ruleId":"339","replacedBy":"352"},{"ruleId":"341","replacedBy":"353"},{"ruleId":"335","severity":1,"message":"354","line":24,"column":10,"nodeType":"337","messageId":"338","endLine":24,"endColumn":15},{"ruleId":"335","severity":1,"message":"345","line":24,"column":10,"nodeType":"337","messageId":"338","endLine":24,"endColumn":20},{"ruleId":"335","severity":1,"message":"346","line":25,"column":10,"nodeType":"337","messageId":"338","endLine":25,"endColumn":21},"no-unused-vars","'AdminRoute' is defined but never used.","Identifier","unusedVar","no-native-reassign",["355"],"no-negated-in-lhs",["356"],"'useDispatch' is defined but never used.","'Redirect' is defined but never used.","'useContext' is defined but never used.","'AuthContext' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'send_order' is defined but never used.",["355"],["356"],"'range' is defined but never used.","no-global-assign","no-unsafe-negation"]